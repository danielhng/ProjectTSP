//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

package SeucrityNetwork;

#include <omnetpp.h>
import "inet/common/INETDefs.h"
import "inet/applications/udpapp/UDPBasicApp.h"

using namespace omnetpp;
using namespace inet;

class UserEquipment : public cSimpleModule
{
	protected:
		virtual void initialize(int stage) override;
		virtual void handleMessage(cMessage *msg) override;
		void connectToNetwork();
};

Define_Module(UserEquipment);
void UserEquipment::initialize(int stage)
{
	cSimpleModule::initialize(stage);
	if (stage == inet::INITSTAGE_APPLICATION_LAYER) {
		EV << “User Equipment Initialized” << endl;
		scheduleAt(simTime() + uniform(1, 3), new cMessage(“connectToNetwork”));
	}
}

void UserEquipment::handleMessage(cMessage *msg)
{
	if (strcmp(msg->getName(), “connectToNetwork”) == 0) {
	connectToNetwork();
}
delete msg;
}

void UserEquipment::connectToNetwork()
{
	// Simulate connection to 5G network
	Packet *packet = new Packet(“ConnectionRequestPacket”);
	packet->insertAtBack(makeShared<Chunk>(std::vector<int>{1, 2, 3})); // Example data
	send(packet, “ethgOut”);
	// Schedule next action
	scheduleAt(simTime() + uniform(1, 3), new cMessage(“connectToNetwork”));
}